{"ast":null,"code":"const API_BASE = \"http://localhost:3001/api\"; // <-- make sure this matches your backend port\n\n// =====================\n// Token management\n// =====================\nlet token = null;\nexport function setToken(newToken) {\n  token = newToken;\n  if (newToken) {\n    localStorage.setItem(\"token\", newToken);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\nfunction getToken() {\n  if (!token) token = localStorage.getItem(\"token\");\n  return token;\n}\n\n// =====================\n// Core fetch helper\n// =====================\nasync function fetchData(endpoint, options = {}) {\n  try {\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      ...(getToken() && {\n        Authorization: `Bearer ${getToken()}`\n      }),\n      ...(options.headers || {})\n    };\n    const res = await fetch(`${API_BASE}/${endpoint}`, {\n      ...options,\n      headers\n    });\n    if (!res.ok) {\n      const errText = await res.text().catch(() => \"\");\n      throw new Error(`${res.status} ${res.statusText}: ${errText}`);\n    }\n\n    // In case of 204/empty body\n    const contentType = res.headers.get(\"content-type\") || \"\";\n    return contentType.includes(\"application/json\") ? await res.json() : null;\n  } catch (err) {\n    console.error(\"API Error:\", err);\n    return null;\n  }\n}\n\n// =====================\n// Auth\n// =====================\nexport async function registerUser({\n  fullName,\n  email,\n  password\n}) {\n  return fetchData(\"auth/register\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      fullName,\n      email,\n      password\n    })\n  });\n}\nexport async function loginUser({\n  email,\n  password\n}) {\n  const data = await fetchData(\"auth/login\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (data !== null && data !== void 0 && data.token) setToken(data.token);\n  return data;\n}\nexport function logoutUser() {\n  setToken(null);\n}\n\n// Optional: get current user profile if your backend exposes it\nexport async function getMe() {\n  return fetchData(\"auth/me\", {\n    method: \"GET\"\n  });\n}\n\n// =====================\n// Locations / Team / Services\n// =====================\nexport async function getLocations() {\n  const data = await fetchData(\"locations\");\n  return Array.isArray(data) ? data : [];\n}\nexport async function getTeamMembers() {\n  const data = await fetchData(\"team-members\");\n  return (data === null || data === void 0 ? void 0 : data.team_members) || [];\n}\nexport async function getServices() {\n  const data = await fetchData(\"services\");\n  return Array.isArray(data) ? data : [];\n}\n\n// =====================\n// Bookings\n// =====================\nexport async function getBookings() {\n  const data = await fetchData(\"bookings\");\n  return Array.isArray(data) ? data : [];\n}\nexport async function createBooking(payload) {\n  return fetchData(\"bookings\", {\n    method: \"POST\",\n    body: JSON.stringify(payload)\n  });\n}\nexport async function cancelBooking(bookingId) {\n  return fetchData(`bookings/${bookingId}`, {\n    method: \"DELETE\"\n  });\n}","map":{"version":3,"names":["API_BASE","token","setToken","newToken","localStorage","setItem","removeItem","getToken","getItem","fetchData","endpoint","options","headers","Authorization","res","fetch","ok","errText","text","catch","Error","status","statusText","contentType","get","includes","json","err","console","error","registerUser","fullName","email","password","method","body","JSON","stringify","loginUser","data","logoutUser","getMe","getLocations","Array","isArray","getTeamMembers","team_members","getServices","getBookings","createBooking","payload","cancelBooking","bookingId"],"sources":["C:/Users/dah03/nail-site/mycalendar/src/utils/api.js"],"sourcesContent":["const API_BASE = \"http://localhost:3001/api\"; // <-- make sure this matches your backend port\r\n\r\n// =====================\r\n// Token management\r\n// =====================\r\nlet token = null;\r\n\r\nexport function setToken(newToken) {\r\n  token = newToken;\r\n  if (newToken) {\r\n    localStorage.setItem(\"token\", newToken);\r\n  } else {\r\n    localStorage.removeItem(\"token\");\r\n  }\r\n}\r\n\r\nfunction getToken() {\r\n  if (!token) token = localStorage.getItem(\"token\");\r\n  return token;\r\n}\r\n\r\n// =====================\r\n// Core fetch helper\r\n// =====================\r\nasync function fetchData(endpoint, options = {}) {\r\n  try {\r\n    const headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      ...(getToken() && { Authorization: `Bearer ${getToken()}` }),\r\n      ...(options.headers || {}),\r\n    };\r\n\r\n    const res = await fetch(`${API_BASE}/${endpoint}`, {\r\n      ...options,\r\n      headers,\r\n    });\r\n\r\n    if (!res.ok) {\r\n      const errText = await res.text().catch(() => \"\");\r\n      throw new Error(`${res.status} ${res.statusText}: ${errText}`);\r\n    }\r\n\r\n    // In case of 204/empty body\r\n    const contentType = res.headers.get(\"content-type\") || \"\";\r\n    return contentType.includes(\"application/json\") ? await res.json() : null;\r\n  } catch (err) {\r\n    console.error(\"API Error:\", err);\r\n    return null;\r\n  }\r\n}\r\n\r\n// =====================\r\n// Auth\r\n// =====================\r\nexport async function registerUser({ fullName, email, password }) {\r\n  return fetchData(\"auth/register\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ fullName, email, password }),\r\n  });\r\n}\r\n\r\nexport async function loginUser({ email, password }) {\r\n  const data = await fetchData(\"auth/login\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n  if (data?.token) setToken(data.token);\r\n  return data;\r\n}\r\n\r\nexport function logoutUser() {\r\n  setToken(null);\r\n}\r\n\r\n// Optional: get current user profile if your backend exposes it\r\nexport async function getMe() {\r\n  return fetchData(\"auth/me\", { method: \"GET\" });\r\n}\r\n\r\n// =====================\r\n// Locations / Team / Services\r\n// =====================\r\nexport async function getLocations() {\r\n  const data = await fetchData(\"locations\");\r\n  return Array.isArray(data) ? data : [];\r\n}\r\n\r\nexport async function getTeamMembers() {\r\n  const data = await fetchData(\"team-members\");\r\n  return data?.team_members || [];\r\n}\r\n\r\nexport async function getServices() {\r\n  const data = await fetchData(\"services\");\r\n  return Array.isArray(data) ? data : [];\r\n}\r\n\r\n// =====================\r\n// Bookings\r\n// =====================\r\nexport async function getBookings() {\r\n  const data = await fetchData(\"bookings\");\r\n  return Array.isArray(data) ? data : [];\r\n}\r\n\r\nexport async function createBooking(payload) {\r\n  return fetchData(\"bookings\", {\r\n    method: \"POST\",\r\n    body: JSON.stringify(payload),\r\n  });\r\n}\r\n\r\nexport async function cancelBooking(bookingId) {\r\n  return fetchData(`bookings/${bookingId}`, { method: \"DELETE\" });\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,2BAA2B,CAAC,CAAC;;AAE9C;AACA;AACA;AACA,IAAIC,KAAK,GAAG,IAAI;AAEhB,OAAO,SAASC,QAAQA,CAACC,QAAQ,EAAE;EACjCF,KAAK,GAAGE,QAAQ;EAChB,IAAIA,QAAQ,EAAE;IACZC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;EACzC,CAAC,MAAM;IACLC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;EAClC;AACF;AAEA,SAASC,QAAQA,CAAA,EAAG;EAClB,IAAI,CAACN,KAAK,EAAEA,KAAK,GAAGG,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;EACjD,OAAOP,KAAK;AACd;;AAEA;AACA;AACA;AACA,eAAeQ,SAASA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC/C,IAAI;IACF,MAAMC,OAAO,GAAG;MACd,cAAc,EAAE,kBAAkB;MAClC,IAAIL,QAAQ,CAAC,CAAC,IAAI;QAAEM,aAAa,EAAE,UAAUN,QAAQ,CAAC,CAAC;MAAG,CAAC,CAAC;MAC5D,IAAII,OAAO,CAACC,OAAO,IAAI,CAAC,CAAC;IAC3B,CAAC;IAED,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGf,QAAQ,IAAIU,QAAQ,EAAE,EAAE;MACjD,GAAGC,OAAO;MACVC;IACF,CAAC,CAAC;IAEF,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE;MACX,MAAMC,OAAO,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,EAAE,CAAC;MAChD,MAAM,IAAIC,KAAK,CAAC,GAAGN,GAAG,CAACO,MAAM,IAAIP,GAAG,CAACQ,UAAU,KAAKL,OAAO,EAAE,CAAC;IAChE;;IAEA;IACA,MAAMM,WAAW,GAAGT,GAAG,CAACF,OAAO,CAACY,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE;IACzD,OAAOD,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,GAAG,MAAMX,GAAG,CAACY,IAAI,CAAC,CAAC,GAAG,IAAI;EAC3E,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,GAAG,CAAC;IAChC,OAAO,IAAI;EACb;AACF;;AAEA;AACA;AACA;AACA,OAAO,eAAeG,YAAYA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAChE,OAAOxB,SAAS,CAAC,eAAe,EAAE;IAChCyB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEN,QAAQ;MAAEC,KAAK;MAAEC;IAAS,CAAC;EACpD,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeK,SAASA,CAAC;EAAEN,KAAK;EAAEC;AAAS,CAAC,EAAE;EACnD,MAAMM,IAAI,GAAG,MAAM9B,SAAS,CAAC,YAAY,EAAE;IACzCyB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,IAAIM,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEtC,KAAK,EAAEC,QAAQ,CAACqC,IAAI,CAACtC,KAAK,CAAC;EACrC,OAAOsC,IAAI;AACb;AAEA,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3BtC,QAAQ,CAAC,IAAI,CAAC;AAChB;;AAEA;AACA,OAAO,eAAeuC,KAAKA,CAAA,EAAG;EAC5B,OAAOhC,SAAS,CAAC,SAAS,EAAE;IAAEyB,MAAM,EAAE;EAAM,CAAC,CAAC;AAChD;;AAEA;AACA;AACA;AACA,OAAO,eAAeQ,YAAYA,CAAA,EAAG;EACnC,MAAMH,IAAI,GAAG,MAAM9B,SAAS,CAAC,WAAW,CAAC;EACzC,OAAOkC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;AACxC;AAEA,OAAO,eAAeM,cAAcA,CAAA,EAAG;EACrC,MAAMN,IAAI,GAAG,MAAM9B,SAAS,CAAC,cAAc,CAAC;EAC5C,OAAO,CAAA8B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,YAAY,KAAI,EAAE;AACjC;AAEA,OAAO,eAAeC,WAAWA,CAAA,EAAG;EAClC,MAAMR,IAAI,GAAG,MAAM9B,SAAS,CAAC,UAAU,CAAC;EACxC,OAAOkC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;AACxC;;AAEA;AACA;AACA;AACA,OAAO,eAAeS,WAAWA,CAAA,EAAG;EAClC,MAAMT,IAAI,GAAG,MAAM9B,SAAS,CAAC,UAAU,CAAC;EACxC,OAAOkC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;AACxC;AAEA,OAAO,eAAeU,aAAaA,CAACC,OAAO,EAAE;EAC3C,OAAOzC,SAAS,CAAC,UAAU,EAAE;IAC3ByB,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACa,OAAO;EAC9B,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeC,aAAaA,CAACC,SAAS,EAAE;EAC7C,OAAO3C,SAAS,CAAC,YAAY2C,SAAS,EAAE,EAAE;IAAElB,MAAM,EAAE;EAAS,CAAC,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}