{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dah03\\\\nail-site\\\\mycalendar\\\\src\\\\components\\\\App\\\\Calendar\\\\BookingSection\\\\BookingSection.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Calendar from \"../Calendar\";\nimport BookingForm from \"../BookingForm/BookingForm\";\nimport { getLocations, getTeamMembers, getServices, getBookings, createBooking as createBookingApi } from \"../../../../\";\nimport \"./BookingSection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookingSection() {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [teamMembers, setTeamMembers] = useState([]);\n  const [services, setServices] = useState([]);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState(null);\n  const [customerId, setCustomerId] = useState(\"\");\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\n  const [selectedService, setSelectedService] = useState(\"\");\n\n  // Fetch data from backend\n  useEffect(() => {\n    async function loadData() {\n      try {\n        const [locRes, teamRes, serviceRes, bookingRes] = await Promise.all([getLocations(), getTeamMembers(), getServices(), getBookings()]);\n        setLocations(Array.isArray(locRes) ? locRes : []);\n        setTeamMembers((teamRes === null || teamRes === void 0 ? void 0 : teamRes.team_members) || []);\n        setServices((serviceRes === null || serviceRes === void 0 ? void 0 : serviceRes.objects) || []);\n        setEvents(Array.isArray(bookingRes) ? bookingRes.map(b => {\n          var _b$customer;\n          return {\n            id: b.id,\n            title: ((_b$customer = b.customer) === null || _b$customer === void 0 ? void 0 : _b$customer.display_name) || \"Booking\",\n            start: b.start_at,\n            end: b.end_at\n          };\n        }) : []);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n      }\n    }\n    loadData();\n  }, []);\n  const handleDateSelect = selectInfo => {\n    setSelectedSlot({\n      start: selectInfo.startStr,\n      end: selectInfo.endStr\n    });\n    setShowBookingForm(true);\n  };\n  const createBooking = async () => {\n    if (!customerId || !selectedLocation || !selectedTeamMember || !selectedService) {\n      return alert(\"Please fill all fields!\");\n    }\n    const payload = {\n      booking: {\n        customer_id: customerId,\n        location_id: selectedLocation,\n        start_at: selectedSlot.start,\n        end_at: selectedSlot.end,\n        appointment_segments: [{\n          team_member_id: selectedTeamMember,\n          service_variation_id: selectedService,\n          service_variation_version: 1\n        }]\n      }\n    };\n    const newBooking = await createBookingApi(payload);\n    if (newBooking !== null && newBooking !== void 0 && newBooking.id) {\n      setEvents(prev => {\n        var _newBooking$customer;\n        return [...prev, {\n          id: newBooking.id,\n          title: ((_newBooking$customer = newBooking.customer) === null || _newBooking$customer === void 0 ? void 0 : _newBooking$customer.display_name) || \"Booking\",\n          start: newBooking.start_at,\n          end: newBooking.end_at\n        }];\n      });\n      setShowBookingForm(false);\n    } else {\n      alert(\"Failed to create booking\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"booking-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"booking-content\",\n      children: showBookingForm && /*#__PURE__*/_jsxDEV(BookingForm, {\n        customerId: customerId,\n        setCustomerId: setCustomerId,\n        selectedLocation: selectedLocation,\n        setSelectedLocation: setSelectedLocation,\n        selectedTeamMember: selectedTeamMember,\n        setSelectedTeamMember: setSelectedTeamMember,\n        selectedService: selectedService,\n        setSelectedService: setSelectedService,\n        locations: locations,\n        teamMembers: teamMembers,\n        services: services,\n        onSubmit: createBooking,\n        onCancel: () => setShowBookingForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(BookingSection, \"YjfztZH4UErOLRdJ/CKKjnYcTY4=\");\n_c = BookingSection;\nvar _c;\n$RefreshReg$(_c, \"BookingSection\");","map":{"version":3,"names":["useState","useEffect","Calendar","BookingForm","getLocations","getTeamMembers","getServices","getBookings","createBooking","createBookingApi","jsxDEV","_jsxDEV","BookingSection","_s","events","setEvents","locations","setLocations","teamMembers","setTeamMembers","services","setServices","showBookingForm","setShowBookingForm","selectedSlot","setSelectedSlot","customerId","setCustomerId","selectedLocation","setSelectedLocation","selectedTeamMember","setSelectedTeamMember","selectedService","setSelectedService","loadData","locRes","teamRes","serviceRes","bookingRes","Promise","all","Array","isArray","team_members","objects","map","b","_b$customer","id","title","customer","display_name","start","start_at","end","end_at","err","console","error","handleDateSelect","selectInfo","startStr","endStr","alert","payload","booking","customer_id","location_id","appointment_segments","team_member_id","service_variation_id","service_variation_version","newBooking","prev","_newBooking$customer","className","children","onSubmit","onCancel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dah03/nail-site/mycalendar/src/components/App/Calendar/BookingSection/BookingSection.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Calendar from \"../Calendar\";\r\nimport BookingForm from \"../BookingForm/BookingForm\";\r\nimport {\r\n  getLocations,\r\n  getTeamMembers,\r\n  getServices,\r\n  getBookings,\r\n  createBooking as createBookingApi,\r\n} from \"../../../../\";\r\nimport \"./BookingSection.css\";\r\n\r\nexport default function BookingSection() {\r\n  const [events, setEvents] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n  const [teamMembers, setTeamMembers] = useState([]);\r\n  const [services, setServices] = useState([]);\r\n\r\n  const [showBookingForm, setShowBookingForm] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [customerId, setCustomerId] = useState(\"\");\r\n  const [selectedLocation, setSelectedLocation] = useState(\"\");\r\n  const [selectedTeamMember, setSelectedTeamMember] = useState(\"\");\r\n  const [selectedService, setSelectedService] = useState(\"\");\r\n\r\n  // Fetch data from backend\r\n  useEffect(() => {\r\n    async function loadData() {\r\n      try {\r\n        const [locRes, teamRes, serviceRes, bookingRes] = await Promise.all([\r\n          getLocations(),\r\n          getTeamMembers(),\r\n          getServices(),\r\n          getBookings(),\r\n        ]);\r\n\r\n        setLocations(Array.isArray(locRes) ? locRes : []);\r\n        setTeamMembers(teamRes?.team_members || []);\r\n        setServices(serviceRes?.objects || []);\r\n        setEvents(\r\n          Array.isArray(bookingRes)\r\n            ? bookingRes.map((b) => ({\r\n                id: b.id,\r\n                title: b.customer?.display_name || \"Booking\",\r\n                start: b.start_at,\r\n                end: b.end_at,\r\n              }))\r\n            : []\r\n        );\r\n      } catch (err) {\r\n        console.error(\"Failed to load data:\", err);\r\n      }\r\n    }\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleDateSelect = (selectInfo) => {\r\n    setSelectedSlot({ start: selectInfo.startStr, end: selectInfo.endStr });\r\n    setShowBookingForm(true);\r\n  };\r\n\r\n  const createBooking = async () => {\r\n    if (\r\n      !customerId ||\r\n      !selectedLocation ||\r\n      !selectedTeamMember ||\r\n      !selectedService\r\n    ) {\r\n      return alert(\"Please fill all fields!\");\r\n    }\r\n\r\n    const payload = {\r\n      booking: {\r\n        customer_id: customerId,\r\n        location_id: selectedLocation,\r\n        start_at: selectedSlot.start,\r\n        end_at: selectedSlot.end,\r\n        appointment_segments: [\r\n          {\r\n            team_member_id: selectedTeamMember,\r\n            service_variation_id: selectedService,\r\n            service_variation_version: 1,\r\n          },\r\n        ],\r\n      },\r\n    };\r\n\r\n    const newBooking = await createBookingApi(payload);\r\n    if (newBooking?.id) {\r\n      setEvents((prev) => [\r\n        ...prev,\r\n        {\r\n          id: newBooking.id,\r\n          title: newBooking.customer?.display_name || \"Booking\",\r\n          start: newBooking.start_at,\r\n          end: newBooking.end_at,\r\n        },\r\n      ]);\r\n      setShowBookingForm(false);\r\n    } else {\r\n      alert(\"Failed to create booking\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"booking-container\">\r\n      <div className=\"booking-content\">\r\n        {showBookingForm && (\r\n          <BookingForm\r\n            customerId={customerId}\r\n            setCustomerId={setCustomerId}\r\n            selectedLocation={selectedLocation}\r\n            setSelectedLocation={setSelectedLocation}\r\n            selectedTeamMember={selectedTeamMember}\r\n            setSelectedTeamMember={setSelectedTeamMember}\r\n            selectedService={selectedService}\r\n            setSelectedService={setSelectedService}\r\n            locations={locations}\r\n            teamMembers={teamMembers}\r\n            services={services}\r\n            onSubmit={createBooking}\r\n            onCancel={() => setShowBookingForm(false)}\r\n          />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}